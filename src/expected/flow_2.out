SET client_min_messages = warning;
\set ECHO none
 _create_roles 
---------------
             0
(1 row)

 _reference_time 
-----------------
               0
(1 row)

 _reference_time 
-----------------
               0
(1 row)

 _reference_time 
-----------------
               0
(1 row)

-- RESET client_min_messages;
insert into tuser(name) values (current_user);
select fuser(current_user,0);
INFO:  user "olivier" updated
 fuser 
-------
 
(1 row)

select fspendquota(current_timestamp::timestamp);
 fspendquota 
-------------
 t
(1 row)

select fconnect(false);
 fconnect 
----------
        1
(1 row)

select fexplodequality(current_user || '/q1');
 fexplodequality 
-----------------
 {olivier,q1}
(1 row)

select fupdate_quality(current_user || '/q1',0);
 fupdate_quality 
-----------------
               1
(1 row)

select fverify();
 fverify 
---------
 
(1 row)

select current_user;
 current_user 
--------------
 olivier
(1 row)

select fadmin(); -- market opened
 fadmin 
--------
 t
(1 row)

select id from fdroporder(1::int8);
 id 
----
   
(1 row)

-- finsertorder(_owner text,_qualityprovided text,_qttprovided int8,_qttrequired int8,_qualityrequired text)
-- 1 q1 -> 2 q2 -> 3 q3
select finsertorder('o1',current_user || '/q1',1,3,current_user || '/q3');
INFO:  owner o1 created
CONTEXT:  PL/pgSQL function "finsertorder" line 35 at assignment
 finsertorder 
--------------
            0
(1 row)

select finsertorder('o2',current_user || '/q2',2,1,current_user || '/q1');
INFO:  owner o2 created
CONTEXT:  PL/pgSQL function "finsertorder" line 35 at assignment
 finsertorder 
--------------
            0
(1 row)

select finsertorder('o3',current_user || '/q3',3,2,current_user || '/q2');
INFO:  owner o3 created
CONTEXT:  PL/pgSQL function "finsertorder" line 35 at assignment
 finsertorder 
--------------
            1
(1 row)

-- 2 owners
-- update tconst set value=0 where name='VERIFY';
select finsertorder('o1',current_user || '/q1',1,3,current_user || '/q3');
 finsertorder 
--------------
            0
(1 row)

select finsertorder('o2',current_user || '/q2',2,1,current_user || '/q1');
 finsertorder 
--------------
            0
(1 row)

select finsertorder('o2',current_user || '/q3',3,2,current_user || '/q2'); 
 finsertorder 
--------------
            1
(1 row)

-- no barter
select finsertorder('o1',current_user || '/q1',1,2,current_user || '/q2');
 finsertorder 
--------------
            0
(1 row)

select finsertorder('o2',current_user || '/q2',2,1,current_user || '/q1');
 finsertorder 
--------------
            1
(1 row)

-- long barter
select finsertorder('o1',current_user || '/q1',2,2,current_user || '/q2');
 finsertorder 
--------------
            0
(1 row)

select finsertorder('o2',current_user || '/q2',2,1,current_user || '/q1');
 finsertorder 
--------------
            1
(1 row)

-- short barter
select finsertorder('o1',current_user || '/q1',1,4,current_user || '/q2'); -- [1]
 finsertorder 
--------------
            0
(1 row)

select finsertorder('o2',current_user || '/q2',2,1,current_user || '/q1'); -- refused
 finsertorder 
--------------
            0
(1 row)

-- cycle with [1]
select finsertorder('o2',current_user || '/q2',4,1,current_user || '/q1');
 finsertorder 
--------------
            1
(1 row)

select id from fdroporder(12);
INFO:  order 12 dropped
 id 
----
 12
(1 row)

select fadmin();
 fadmin 
--------
 t
(1 row)

select fadmin(); --closed
 fadmin 
--------
 t
(1 row)

select fadmin();
 fadmin 
--------
 t
(1 row)

select finsertorder('o2',current_user || '/q2',4,1,current_user || '/q1');
 finsertorder 
--------------
            0
(1 row)

select finsertorder('o2',current_user || '/q2',4,1,current_user || '/q1');
 finsertorder 
--------------
            0
(1 row)

select fadmin();
 fadmin 
--------
 t
(1 row)

select fadmin(); --closed
 fadmin 
--------
 t
(1 row)

select state,backup,diagnostic from vmarket;
 state  | backup | diagnostic 
--------+--------+------------
 CLOSED |      2 | OK
(1 row)

