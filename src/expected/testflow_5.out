set role admin;
select id,sess,action from fclose();
INFO:  The market is now closed
INFO:  The function fprepare() is enabled.
INFO:  It will succeed only if tables tmvt and torder are empty.
 id | sess | action 
----+------+--------
  2 |    1 | close
(1 row)

reset role;
select ftruncatetables();
NOTICE:  truncate cascades to table "torder"
CONTEXT:  SQL statement "TRUNCATE tquality CASCADE"
PL/pgSQL function "ftruncatetables" line 11 at SQL statement
NOTICE:  truncate cascades to table "tmvt"
CONTEXT:  SQL statement "TRUNCATE tquality CASCADE"
PL/pgSQL function "ftruncatetables" line 11 at SQL statement
NOTICE:  truncate cascades to table "tmvtremoved"
CONTEXT:  SQL statement "TRUNCATE tquality CASCADE"
PL/pgSQL function "ftruncatetables" line 11 at SQL statement
NOTICE:  truncate cascades to table "torder"
CONTEXT:  SQL statement "TRUNCATE towner CASCADE"
PL/pgSQL function "ftruncatetables" line 13 at SQL statement
NOTICE:  truncate cascades to table "tmvt"
CONTEXT:  SQL statement "TRUNCATE towner CASCADE"
PL/pgSQL function "ftruncatetables" line 13 at SQL statement
NOTICE:  truncate cascades to table "tmvtremoved"
CONTEXT:  SQL statement "TRUNCATE towner CASCADE"
PL/pgSQL function "ftruncatetables" line 13 at SQL statement
INFO:  The command: VACUUM FULL ANALYZE is recommended
INFO:  All market tables have been truncated
 ftruncatetables 
-----------------
 
(1 row)

set role admin;
select id,sess,action from fprepare();
INFO:  fopen() is enabled
INFO:  All market tables will be truncated when you will execute it
 id | sess | action  
----+------+---------
  3 |    1 | prepare
(1 row)

-- market is opened
select id,sess,action from fopen();
NOTICE:  truncate cascades to table "torder"
CONTEXT:  SQL statement "TRUNCATE tquality CASCADE"
PL/pgSQL function "ftruncatetables" line 11 at SQL statement
SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
NOTICE:  truncate cascades to table "tmvt"
CONTEXT:  SQL statement "TRUNCATE tquality CASCADE"
PL/pgSQL function "ftruncatetables" line 11 at SQL statement
SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
NOTICE:  truncate cascades to table "tmvtremoved"
CONTEXT:  SQL statement "TRUNCATE tquality CASCADE"
PL/pgSQL function "ftruncatetables" line 11 at SQL statement
SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
NOTICE:  truncate cascades to table "torder"
CONTEXT:  SQL statement "TRUNCATE towner CASCADE"
PL/pgSQL function "ftruncatetables" line 13 at SQL statement
SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
NOTICE:  truncate cascades to table "tmvt"
CONTEXT:  SQL statement "TRUNCATE towner CASCADE"
PL/pgSQL function "ftruncatetables" line 13 at SQL statement
SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
NOTICE:  truncate cascades to table "tmvtremoved"
CONTEXT:  SQL statement "TRUNCATE towner CASCADE"
PL/pgSQL function "ftruncatetables" line 13 at SQL statement
SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
INFO:  The command: VACUUM FULL ANALYZE is recommended
CONTEXT:  SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
INFO:  All market tables have been truncated
CONTEXT:  SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
INFO:  fclose() is enabled
INFO:  The market is now opened
 id | sess | action 
----+------+--------
  4 |    2 | open
(1 row)

set role client;
select finsertorder('u','b',1000,1000,'a');
INFO:  owner u created
CONTEXT:  PL/pgSQL function "finsertorder" line 35 at assignment
 finsertorder 
--------------
(0 rows)

select finsertorder('v','c',1000,1000,'b');
INFO:  owner v created
CONTEXT:  PL/pgSQL function "finsertorder" line 35 at assignment
 finsertorder 
--------------
(0 rows)

select fgetquote('w','a','c');
   fgetquote   
---------------
 (3,1000,1000)
(1 row)

select finsertorder('w','a',1000,1000,'c');
INFO:  owner w created
CONTEXT:  PL/pgSQL function "finsertorder" line 35 at assignment
 finsertorder 
--------------
 (2-3,3,1)
(1 row)

select id,nb,oruuid,grp,provider,quality,qtt,receiver from vmvt;
 id | nb | oruuid | grp | provider | quality | qtt  | receiver 
----+----+--------+-----+----------+---------+------+----------
  2 |  3 | 2-1    |   1 | u        | b       | 1000 | v
  3 |  3 | 2-2    |   1 | v        | c       | 1000 | w
  1 |  3 | 2-3    |   1 | w        | a       | 1000 | u
(3 rows)

select fremoveagreement(1);
 fremoveagreement 
------------------
                3
(1 row)

select id,qtt from tquality;
 id | qtt 
----+-----
  1 |   0
  2 |   0
  3 |   0
(3 rows)

select finsertorder('u','b',2000,1000,'a');
 finsertorder 
--------------
(0 rows)

select finsertorder('v','c',2000,1000,'b');
 finsertorder 
--------------
(0 rows)

select fgetquote('w','a','c');
  fgetquote   
--------------
 (3,500,2000)
(1 row)

select finsertorder('w','a',500,2000,'c');
 finsertorder 
--------------
 (2-6,3,4)
(1 row)

select id,nb,oruuid,grp,provider,quality,qtt,receiver from vmvt;
 id | nb | oruuid | grp | provider | quality | qtt  | receiver 
----+----+--------+-----+----------+---------+------+----------
  5 |  3 | 2-4    |   4 | u        | b       | 1000 | v
  6 |  3 | 2-5    |   4 | v        | c       | 2000 | w
  4 |  3 | 2-6    |   4 | w        | a       |  500 | u
(3 rows)

select fremoveagreement(4);
 fremoveagreement 
------------------
                3
(1 row)

select fgetquote('w','a','b');
  fgetquote   
--------------
 (2,500,1000)
(1 row)

select finsertorder('w','a',500,1000,'b');
 finsertorder 
--------------
 (2-7,2,7)
(1 row)

set role admin;
-- market is closed
select id,sess,action from fclose();
INFO:  The market is now closed
INFO:  The function fprepare() is enabled.
INFO:  It will succeed only if tables tmvt and torder are empty.
 id | sess | action 
----+------+--------
  5 |    2 | close
(1 row)

set role client;
select fremoveagreement(7);
 fremoveagreement 
------------------
                2
(1 row)

set role admin;
select id,qtt from tquality;
 id | qtt 
----+-----
  3 |   0
  2 |   0
  1 |   0
(3 rows)

select * from fgetstats(true);
            _name             |  cnt  
------------------------------+-------
 number of qualities          |     3
 number of owners             |     3
 number of orders             |     7
 number of movements          |     8
 number of orders removed     |     7
 number of movements removed  |     8
 total number of agreements   |     3
 errors on quantities in mvts |     0
 errors on agreements in mvts |     0
 MAXCYCLE                     |     8
 VERSION                      |    31
 INSERT_OWN_UNKNOWN           |     1
 CHECK_QUALITY_OWNERSHIP      |     0
 MAXORDERFETCH                | 10000
 MARKET_OPENED                |     0
 MARKET_SESSION               |     2
 agreements with 2 partners   |     1
 agreements with 3 partners   |     2
(18 rows)

select id,sess,action from fprepare();
INFO:  fopen() is enabled
INFO:  All market tables will be truncated when you will execute it
 id | sess | action  
----+------+---------
  6 |    2 | prepare
(1 row)

select id,sess,action from fopen();
NOTICE:  truncate cascades to table "torder"
CONTEXT:  SQL statement "TRUNCATE tquality CASCADE"
PL/pgSQL function "ftruncatetables" line 11 at SQL statement
SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
NOTICE:  truncate cascades to table "tmvt"
CONTEXT:  SQL statement "TRUNCATE tquality CASCADE"
PL/pgSQL function "ftruncatetables" line 11 at SQL statement
SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
NOTICE:  truncate cascades to table "tmvtremoved"
CONTEXT:  SQL statement "TRUNCATE tquality CASCADE"
PL/pgSQL function "ftruncatetables" line 11 at SQL statement
SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
NOTICE:  truncate cascades to table "torder"
CONTEXT:  SQL statement "TRUNCATE towner CASCADE"
PL/pgSQL function "ftruncatetables" line 13 at SQL statement
SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
NOTICE:  truncate cascades to table "tmvt"
CONTEXT:  SQL statement "TRUNCATE towner CASCADE"
PL/pgSQL function "ftruncatetables" line 13 at SQL statement
SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
NOTICE:  truncate cascades to table "tmvtremoved"
CONTEXT:  SQL statement "TRUNCATE towner CASCADE"
PL/pgSQL function "ftruncatetables" line 13 at SQL statement
SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
INFO:  The command: VACUUM FULL ANALYZE is recommended
CONTEXT:  SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
INFO:  All market tables have been truncated
CONTEXT:  SQL statement "SELECT ftruncatetables()"
PL/pgSQL function "fopen" line 7 at PERFORM
INFO:  fclose() is enabled
INFO:  The market is now opened
 id | sess | action 
----+------+--------
  7 |    3 | open
(1 row)

-- select id,qtt from tquality;
-- select * from fgetstats(true);
